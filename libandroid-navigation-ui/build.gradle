apply plugin: 'com.android.library'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(javaVersion)
  }
}

android {
  compileSdkVersion androidVersions.compileSdkVersion
  buildToolsVersion androidVersions.buildToolsVersion

  defaultConfig {
    minSdkVersion androidVersions.minSdkVersion
    targetSdkVersion androidVersions.targetSdkVersion
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true

    buildConfigField('String',
        "MAPBOX_NAVIGATION_SDK_IDENTIFIER", String.format("\"%s\"", "mapbox-navigation-ui-android")
    )
    buildConfigField 'String',
        "MAPBOX_NAVIGATION_EVENTS_USER_AGENT", String.format("\"mapbox-navigation-ui-android/%s\"",
        project.VERSION_NAME
    )
    consumerProguardFiles 'proguard-consumer.pro'
  }

  configurations {
    javadocDeps
  }

  buildTypes {
    debug {
      testCoverageEnabled = true
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
    unitTests.includeAndroidResources = true
  }
  android {
    lint {
      baseline = file("lint-baseline.xml")
    }
  }

}

dependencies {
  // Navigation SDK
  api project(':libandroid-navigation')
  implementation dependenciesList.mapLibreAnnotations

  // Support libraries
  implementation 'com.google.android.material:material:1.5.0'
  implementation 'androidx.recyclerview:recyclerview:1.2.1'
  implementation dependenciesList.supportConstraintLayout
  implementation dependenciesList.supportCardView

  // Architecture libraries
  implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
  annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.4.1'

  // Logging
  implementation dependenciesList.timber

  // AutoValues
  annotationProcessor dependenciesList.autoValue
  compileOnly dependenciesList.autoValue

  // Picasso
  implementation dependenciesList.picasso

  // Unit testing
  testImplementation dependenciesList.junit
  testImplementation dependenciesList.mockito
  testImplementation dependenciesList.robolectric
}

apply from: 'javadoc.gradle'
apply from: "${rootDir}/gradle/checkstyle.gradle"
//apply from: "${rootDir}/gradle/dependencies-graph.gradle"
apply from: "${rootDir}/gradle/dependency-updates.gradle"